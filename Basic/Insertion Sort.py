# 삽입 정렬Insertion Sort
# 데이터를 하나씩 확인하며 적절한 위치에 삽입하기
# 필요할 때만 위치를 바꾸기 때문에 '데이터가 거의 정렬 되어 있을 때' 효율적
# 특정한 데이터가 적절한 위치에 들어가기 전, 그 앞까지의 데이터는 이미 정렬됨
# 특정한 데이터가 삽입될 위치를 선정할 때, 삽입될 데이터보다 작은 데이터를 만난다면 그 위치에서 멈춘다.

array = [7,5,9,0,3,1,6,2,4,8]

for i in range(1, len(array)):
    for j in range(i,0,-1): # 인덱스 i부터 1까지 감소하며 반복
        if array[j] < array[j-1]:   # 한 칸씩 왼쪽으로 이동
            array[j], array[j-1] = array[j-1], array[j]
        else: # 자기보다 작은 데이터를 만나면 그 위치에서 멈춤
            break

print(array)

# 시간 복잡도 : O(N^2)
# 그러나 최선의 경우(정렬이 거의 되어 있는) 퀵 정렬보다 강력
# 거의 정렬이 되어 있는 상태로 입력이 주어지는 문제 -> 삽입 정렬을 이용


